syntax = "proto3";

package example.blog;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "example/blog/params.proto";
import "example/blog/post.proto";
import "example/blog/sent_post.proto";
import "example/blog/timeout_post.proto";

option go_package = "example/x/blog/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/example/blog/params";
  
  }
  
  // Queries a list of Post items.
  rpc Post    (QueryGetPostRequest) returns (QueryGetPostResponse) {
    option (google.api.http).get = "/example/blog/post/{id}";
  
  }
  rpc PostAll (QueryAllPostRequest) returns (QueryAllPostResponse) {
    option (google.api.http).get = "/example/blog/post";
  
  }
  
  // Queries a list of SentPost items.
  rpc SentPost    (QueryGetSentPostRequest) returns (QueryGetSentPostResponse) {
    option (google.api.http).get = "/example/blog/sent_post/{id}";
  
  }
  rpc SentPostAll (QueryAllSentPostRequest) returns (QueryAllSentPostResponse) {
    option (google.api.http).get = "/example/blog/sent_post";
  
  }
  
  // Queries a list of TimeoutPost items.
  rpc TimeoutPost    (QueryGetTimeoutPostRequest) returns (QueryGetTimeoutPostResponse) {
    option (google.api.http).get = "/example/blog/timeout_post/{id}";
  
  }
  rpc TimeoutPostAll (QueryAllTimeoutPostRequest) returns (QueryAllTimeoutPostResponse) {
    option (google.api.http).get = "/example/blog/timeout_post";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetPostRequest {
  uint64 id = 1;
}

message QueryGetPostResponse {
  Post Post = 1 [(gogoproto.nullable) = false];
}

message QueryAllPostRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPostResponse {
  repeated Post                                   Post       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSentPostRequest {
  uint64 id = 1;
}

message QueryGetSentPostResponse {
  SentPost SentPost = 1 [(gogoproto.nullable) = false];
}

message QueryAllSentPostRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSentPostResponse {
  repeated SentPost                               SentPost   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTimeoutPostRequest {
  uint64 id = 1;
}

message QueryGetTimeoutPostResponse {
  TimeoutPost TimeoutPost = 1 [(gogoproto.nullable) = false];
}

message QueryAllTimeoutPostRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTimeoutPostResponse {
  repeated TimeoutPost                            TimeoutPost = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

